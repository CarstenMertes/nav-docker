name: Azure test

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
    build-and-deploy:
      runs-on: windows-latest
      steps:

        # Checkout code
      - uses: actions/checkout@main

        # Log into Azure
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true 

      - name: Run Azure PowerShell script
        uses: azure/powershell@v1
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          azPSVersion: "latest"
          inlineScript: |
            $resGroup = "buildgeneric"
            $resLocation = "West Europe"
            $repo = "microsoft/nav-docker"
            $removeResGroupIfExist = $true
            $machines = 2
            $offset = 0
            Write-Host $resGroup
            $runners = (gh api /repos/$repo/actions/runners | ConvertFrom-Json).runners
            $runners | Where-Object { $_.status -eq "offline" } | ForEach-Object {
                Write-host $_.name
                $id = $_.id
                gh api -X DELETE /repos/$repo/actions/runners/$id
            }
            $resourceGroup = Get-AzResourceGroup -name $resGroup -ErrorAction Ignore
            if ($resourceGroup) {
              Write-Host "Removing Resource Group $resGroup"
              Remove-AzResourceGroup -Name $resGroup -Force
            }
            $resourceGroup = New-AzResourceGroup -Name $resGroup -Location $resLocation -Force
            1..$machines | ForEach-Object {
              # Deployment
              $no                       = $offset + $_
              $branch                   = "dev"
              $template                 = "buildagent"

              # ARM template
              $templateUri = "https://raw.githubusercontent.com/microsoft/nav-arm-templates/$branch/$template.json"

              $registrationToken = (gh api -X POST /repos/$repo/actions/runners/registration-token | ConvertFrom-Json).token

              $Parameters = @{
                "VmName"              = "$resgroup$no"
                "Remotedesktopaccess" = "-"
                "OperatingSystem"     = "Windows Server 2022"
                "VmSize"              = "Standard_D4as_v5"
                "OSDiskSize"          = 128
                "StorageAccountType"  = "Premium_LRS"
                "AdminPassword"       = (ConvertTo-SecureString -String $env:GH_TOKEN -AsPlainText -Force)
                "Count"               = 1
                "Token"               = $registrationToken
                "Organization"        = "https://github.com/$repo"
                "LabelsOrPool"        = "buildgeneric"
                "AgentUrl"            = "https://github.com/actions/runner/releases/download/v2.292.0/actions-runner-win-x64-2.292.0.zip"
                "InstallHyperV"       = "Yes"
                "RunInsideDocker"     = "No"
                "FinalSetupScriptUrl" = "additional-installforbuildagent.ps1"
              }

              $err = $resourceGroup | Test-AzResourceGroupDeployment -TemplateUri $templateUri -TemplateParameterObject $Parameters
              if ($err) {
                $err
                throw "stop"
              }
              $resourceGroup | New-AzResourceGroupDeployment -TemplateUri $templateUri -TemplateParameterObject $Parameters -Name $Parameters.vmName -ErrorAction Ignore
            }


            gh

