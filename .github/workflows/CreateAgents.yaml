name: Create Self-Hosted Agents

on:
  workflow_dispatch:
    inputs:
      Count:
        description: Number of agents to create?
        required: true
        default: 2

permissions:
  contents: read

defaults:
  run:
    shell: PowerShell

env:
  resGroup: "buildgeneric"
  resLocation: "West Europe"
  machines: "5"
  ARMbranch: "dev"
  ARMtemplate: "buildagent"

jobs:
  Preparation:
    runs-on: [ windows-latest ]
    outputs:
      matrix: ${{steps.CalculateMatrix.outputs.matrix}}
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true 

      - name: Remove Old Agents
        uses: azure/powershell@v1
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          azPSVersion: "latest"
          inlineScript: |
            $resGroup = $env:resGroup
            $repo = $env:GITHUB_REPOSITORY
            Write-Host "Resource Group is $resGroup"
            #$resourceGroup = Get-AzResourceGroup -name $resGroup -ErrorAction Ignore
            #if ($resourceGroup) {
            #  Write-Host "Removing Resource Group $resGroup"
            #  Remove-AzResourceGroup -Name $resGroup -Force | Out-Host
            #  Write-Host "Done"
            #}
            #$runners = (gh api /repos/$repo/actions/runners | ConvertFrom-Json).runners
            #$runners | Where-Object { $_.status -eq "offline" } | ForEach-Object {
            #  Write-host "Unregistering runner $($_.name)"
            #  $id = $_.id
            #  gh api -X DELETE /repos/$repo/actions/runners/$id
            #  Write-Host "Done"
            #}

      - name: Create Resource Group
        uses: azure/powershell@v1
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          azPSVersion: "latest"
          inlineScript: |
            $resGroup = $env:resGroup
            $resLocation = $env:resLocation
            Write-Host "Creating resource group $resGroup in $resLocation"
            #$resourceGroup = New-AzResourceGroup -Name $resGroup -Location $resLocation -Force
            Write-Host "Done"

      - name: Calculate Matrix
        id: CalculateMatrix
        env:
          count: ${{ github.event.inputs.Count }}
        run: |
          $count = [int]$env:count
          $matrix = @{ "machine" = @(1..$count) } | ConvertTo-Json -compress
          Add-Content -path $ENV:GITHUB_OUTPUT -value "matrix=$matrix"
          Write-Host $matrix

  CreateAgents:
    runs-on: [ windows-latest ]
    needs: [ Preparation ]
    strategy:
      matrix: ${{fromJson(needs.Preparation.outputs.matrix)}}
      fail-fast: true
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true 

      - name: Create Azure VM
        uses: azure/powershell@v1
        if: github.event.inputs.CreateAgents == 'Y'
        env:
          machine: ${{ matrix.machine }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          azPSVersion: "latest"
          inlineScript: |
            Write-Host $env:machine
